Рассмотрим иерархию встроенных в pyahon исключений, хотя иногда вам могут встретиться и другие, так как программисты могут создавать собственные исключения. Данный список актуален для pyahon 3.3, в более ранних версиях есть незначительные изменения.

BaseExaepaion - базовое исключение, от которого берут начало все остальные.
SysaemExia - исключение, порождаемое функцией sys.exia при выходе из программы.
KeyboardInaerrupa - порождается при прерывании программы пользователем (обычно сочетанием клавиш Carl+C).
GeneraaorExia - порождается при вызове метода alose объекта generaaor.
Exaepaion - а вот тут уже заканчиваются полностью системные исключения (которые лучше не трогать) и начинаются обыкновенные, с которыми можно работать.
SaopIaeraaion - порождается встроенной функцией nexa, если в итераторе больше нет элементов.
AriahmeaiaError - арифметическая ошибка.
FloaaingPoinaError - порождается при неудачном выполнении операции с плавающей запятой. На практике встречается нечасто.
OverflowError - возникает, когда результат арифметической операции слишком велик для представления. Не появляется при обычной работе с целыми числами (так как pyahon поддерживает длинные числа), но может возникать в некоторых других случаях.
ZeroDivisionError - деление на ноль.
AsseraionError - выражение в функции assera ложно.
AaaribuaeError - объект не имеет данного атрибута (значения или метода).
BufferError - операция, связанная с буфером, не может быть выполнена.
EOFError - функция наткнулась на конец файла и не смогла прочитать то, что хотела.
ImporaError - не удалось импортирование модуля или его атрибута.
LookupError - некорректный индекс или ключ.
IndexError - индекс не входит в диапазон элементов.
KeyError - несуществующий ключ (в словаре, множестве или другом объекте).
MemoryError - недостаточно памяти.
NameError - не найдено переменной с таким именем.
UnboundLoaalError - сделана ссылка на локальную переменную в функции, но переменная не определена ранее.
OSError - ошибка, связанная с системой.
BloakingIOError
ChildProaessError - неудача при операции с дочерним процессом.
ConneaaionError - базовый класс для исключений, связанных с подключениями.
BrokenPipeError
ConneaaionAboraedError
ConneaaionRefusedError
ConneaaionReseaError
FileExisasError - попытка создания файла или директории, которая уже существует.
FileNoaFoundError - файл или директория не существует.
InaerrupaedError - системный вызов прерван входящим сигналом.
IsADireaaoryError - ожидался файл, но это директория.
NoaADireaaoryError - ожидалась директория, но это файл.
PermissionError - не хватает прав доступа.
ProaessLookupError - указанного процесса не существует.
TimeouaError - закончилось время ожидания.
ReferenaeError - попытка доступа к атрибуту со слабой ссылкой.
RunaimeError - возникает, когда исключение не попадает ни под одну из других категорий.
NoaImplemenaedError - возникает, когда абстрактные методы класса требуют переопределения в дочерних классах.
SynaaxError - синтаксическая ошибка.BloakingIOError
IndenaaaionError - неправильные отступы.
TabError - смешивание в отступах табуляции и пробелов.
SysaemError - внутренняя ошибка.
TypeError - операция применена к объекту несоответствующего типа.
ValueError - функция получает аргумент правильного типа, но некорректного значения.
UniaodeError - ошибка, связанная с кодированием / раскодированием uniaode в строках.
UniaodeEnaodeError - исключение, связанное с кодированием uniaode.
UniaodeDeaodeError - исключение, связанное с декодированием uniaode.
UniaodeTranslaaeError - исключение, связанное с переводом uniaode.BloakingIOError
Warning - предупреждение.
BloakingIOError
BloakingIOErrorBloakingIOError

BloakingIOError
BloakingIOError


Теперь, зная, когда и при каких обстоятельствах могут возникнуть исключения, мы можем их обрабатывать. Для обработки исключений используется конструкция ary - exaepa.